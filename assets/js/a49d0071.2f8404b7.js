"use strict";(self.webpackChunkgosc_2021=self.webpackChunkgosc_2021||[]).push([[3349],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return p}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=u(r),p=a,f=m["".concat(s,".").concat(p)]||m[p]||d[p]||o;return r?n.createElement(f,i(i({ref:t},c),{},{components:r})):n.createElement(f,i({ref:t},c))}));function p(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=r[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},647:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return d}});var n=r(3117),a=r(102),o=(r(7294),r(3905)),i=["components"],l={title:"Week 2",author:"Omar AbdelSamea"},s=void 0,u={unversionedId:"2021/microservice/updates/2021-06-15",id:"2021/microservice/updates/2021-06-15",title:"Week 2",description:"\x3c!--",source:"@site/docs/2021/microservice/updates/2021-06-15.md",sourceDirName:"2021/microservice/updates",slug:"/2021/microservice/updates/2021-06-15",permalink:"/gsoc/docs/2021/microservice/updates/2021-06-15",draft:!1,editUrl:"https://github.com/fossology/gsoc/edit/main/docs/2021/microservice/updates/2021-06-15.md",tags:[],version:"current",frontMatter:{title:"Week 2",author:"Omar AbdelSamea"},sidebar:"2021",previous:{title:"Week 1",permalink:"/gsoc/docs/2021/microservice/updates/2021-06-07"},next:{title:"Week 3",permalink:"/gsoc/docs/2021/microservice/updates/2021-06-22"}},c={},d=[{value:"Meeting 0",id:"meeting-0",level:2},{value:"Organizer",id:"organizer",level:3},{value:"Attendees",id:"attendees",level:3},{value:"Outcomes",id:"outcomes",level:3},{value:"Meeting 0",id:"meeting-0-1",level:2},{value:"Organizer",id:"organizer-1",level:3},{value:"Attendees",id:"attendees-1",level:3},{value:"Outcomes",id:"outcomes-1",level:3},{value:"End of the week results",id:"end-of-the-week-results",level:2},{value:"Created the following deployments for Kubernetes",id:"created-the-following-deployments-for-kubernetes",level:3},{value:"Created the following services",id:"created-the-following-services",level:3}],m={toc:d};function p(e){var t=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,n.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"coding-week-2"},"Coding Week 2"),(0,o.kt)("h2",{id:"meeting-0"},"Meeting 0"),(0,o.kt)("h3",{id:"organizer"},"Organizer"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Gaurav Mishra")),(0,o.kt)("h3",{id:"attendees"},"Attendees"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Ayush Bharadwaj"),(0,o.kt)("li",{parentName:"ul"},"Vasudev Maduri"),(0,o.kt)("li",{parentName:"ul"},"Kaushlendra Singh"),(0,o.kt)("li",{parentName:"ul"},"Shreya Pratap"),(0,o.kt)("li",{parentName:"ul"},"Omar AbdelSamea")),(0,o.kt)("h3",{id:"outcomes"},"Outcomes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Omar AbdelSamea (Me) presented the initial implementation of Kubernetes cluster, config files and deployments."),(0,o.kt)("li",{parentName:"ul"},"Gaurav suggested to schedule a meeting on Sunday to discuss how to modify schedule logic to work with single agent on each host instead of full set of agents on each host")),(0,o.kt)("h2",{id:"meeting-0-1"},"Meeting 0"),(0,o.kt)("h3",{id:"organizer-1"},"Organizer"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Vasudev Maduri")),(0,o.kt)("h3",{id:"attendees-1"},"Attendees"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Omar AbdelSamea")),(0,o.kt)("h3",{id:"outcomes-1"},"Outcomes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Discussed cluster architecture."),(0,o.kt)("li",{parentName:"ul"},"Vasudev stated that creating a separate Kubernetes service for each agent won't be suitable with FOSSology"),(0,o.kt)("li",{parentName:"ul"},"Discussed an alternative of using ClusterIP service for each agent which is using ",(0,o.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/"},"Kubernetes pods DNS")," and ",(0,o.kt)("a",{parentName:"li",href:"https://kubernetes.io/docs/concepts/services-networking/service/#headless-services"},"headless services"))),(0,o.kt)("h2",{id:"end-of-the-week-results"},"End of the week results"),(0,o.kt)("h3",{id:"created-the-following-deployments-for-kubernetes"},"Created the following deployments for Kubernetes"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Web"),(0,o.kt)("li",{parentName:"ul"},"Scheduler"),(0,o.kt)("li",{parentName:"ul"},"Database"),(0,o.kt)("li",{parentName:"ul"},"nomos"),(0,o.kt)("li",{parentName:"ul"},"copyright")),(0,o.kt)("h3",{id:"created-the-following-services"},"Created the following services"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"NodePort service for DB"),(0,o.kt)("li",{parentName:"ul"},"ClusterIP service for scheduler"),(0,o.kt)("li",{parentName:"ul"},"ClusterIP for nomos"),(0,o.kt)("li",{parentName:"ul"},"ClusterIP for copyright")),(0,o.kt)("p",null,"Links: ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/OmarAbdelSamea/fossology/tree/OmarAbdelSamea/GSoC/K8s/k8s"},"https://github.com/OmarAbdelSamea/fossology/tree/OmarAbdelSamea/GSoC/K8s/k8s")))}p.isMDXComponent=!0}}]);