"use strict";(self.webpackChunkgosc_2021=self.webpackChunkgosc_2021||[]).push([[9304],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),u=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},s=function(e){var t=u(e.components);return r.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),m=u(n),d=a,f=m["".concat(p,".").concat(d)]||m[d]||c[d]||i;return n?r.createElement(f,o(o({ref:t},s),{},{components:n})):r.createElement(f,o({ref:t},s))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2170:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var r=n(3117),a=n(102),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:4,title:"Style Guide"},p=void 0,u={unversionedId:"2021/ui/styleGuide",id:"2021/ui/styleGuide",title:"Style Guide",description:"\x3c!--",source:"@site/docs/2021/ui/styleGuide.md",sourceDirName:"2021/ui",slug:"/2021/ui/styleGuide",permalink:"/gsoc/docs/2021/ui/styleGuide",draft:!1,editUrl:"https://github.com/fossology/gsoc/edit/main/docs/2021/ui/styleGuide.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Style Guide"},sidebar:"2021",previous:{title:"Installation",permalink:"/gsoc/docs/2021/ui/installation"}},s={},c=[{value:"Coding Conventions",id:"coding-conventions",level:2},{value:"General Naming Convention",id:"general-naming-convention",level:2},{value:"Before making any pull request one should:",id:"before-making-any-pull-request-one-should",level:2}],m={toc:c};function d(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"We are following the ",(0,i.kt)("a",{parentName:"p",href:"https://airbnb.io/javascript/react/"},"Airbnb JavaScript Style Guide")," for the FOSSology UI project."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://eslint.org/docs/rules/"},"ESlint")," (a pluggable and configurable linter tool) and ",(0,i.kt)("a",{parentName:"p",href:"https://prettier.io/docs/en/"},"Prettier")," (an opinionated code formatter) are used to enforce the style guide."),(0,i.kt)("h2",{id:"coding-conventions"},"Coding Conventions"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"All files using JSX syntax should have ",(0,i.kt)("inlineCode",{parentName:"p"},".jsx")," extension.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Use Pascal case for naming React components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Use Camel case for the function name and variable name.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Prefer using default export.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Prefer using arrow functions.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Prefer using functional components.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Avoid using ",(0,i.kt)("inlineCode",{parentName:"p"},"PropTypes.array")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"PropTypes.object"),". Instead use ",(0,i.kt)("inlineCode",{parentName:"p"},"PropTypes.arrayOf(PropTypes.string)")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"PropTypes.shape({id: PropTypes.number})")," respectively."))),(0,i.kt)("h2",{id:"general-naming-convention"},"General Naming Convention"),(0,i.kt)("p",null,"In the code and documentation prefer using non-offensive terminology, for example:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"allowlist")," / ",(0,i.kt)("inlineCode",{parentName:"li"},"denylist")," (instead of ",(0,i.kt)("inlineCode",{parentName:"li"},"whitelist")," / ",(0,i.kt)("inlineCode",{parentName:"li"},"blacklist"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"primary")," / ",(0,i.kt)("inlineCode",{parentName:"li"},"replica")," (instead of ",(0,i.kt)("inlineCode",{parentName:"li"},"master")," / ",(0,i.kt)("inlineCode",{parentName:"li"},"slave"),")."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"openbox")," / ",(0,i.kt)("inlineCode",{parentName:"li"},"closedbox")," (instead of ",(0,i.kt)("inlineCode",{parentName:"li"},"whitebox")," / ",(0,i.kt)("inlineCode",{parentName:"li"},"blackbox"),").")),(0,i.kt)("h2",{id:"before-making-any-pull-request-one-should"},"Before making any pull request one should:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn fix:all")," to fix all auto fixable errors and warnings.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Run ",(0,i.kt)("inlineCode",{parentName:"p"},"yarn test")," to run all react tests.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ensure that your commit contains a Signed-off-by line, also known as the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("a",{parentName:"strong",href:"https://www.kernel.org/doc/Documentation/process/submitting-patches.rst"},"Developer Certificate of Origin (DCO)")),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Ensure that you have added your name and email in the license headers of all the files that you have modified."))))}d.isMDXComponent=!0}}]);