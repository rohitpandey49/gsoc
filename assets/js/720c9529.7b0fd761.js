"use strict";(self.webpackChunkgosc_2021=self.webpackChunkgosc_2021||[]).push([[4472],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),h=a,f=p["".concat(c,".").concat(h)]||p[h]||d[h]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5647:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return h},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return d}});var r=n(3117),a=n(102),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:1,title:"Introduction",slug:"/2022/spasht/"},c=void 0,l={unversionedId:"2022/spasht/index",id:"2022/spasht/index",title:"Introduction",description:"\x3c!--",source:"@site/docs/2022/spasht/index.md",sourceDirName:"2022/spasht",slug:"/2022/spasht/",permalink:"/gsoc/docs/2022/spasht/",draft:!1,editUrl:"https://github.com/fossology/gsoc/edit/main/docs/2022/spasht/index.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Introduction",slug:"/2022/spasht/"},sidebar:"2022",previous:{title:"Community Bonding",permalink:"/gsoc/docs/2022/reuse/updates/2022-06-02"},next:{title:"Community Bonding",permalink:"/gsoc/docs/2022/spasht/updates/2022-06-02"}},u={},d=[{value:"Author",id:"author",level:3},{value:"Contact info",id:"contact-info",level:3},{value:"Enhancement with ClearlyDefined.io (spasht)",id:"enhancement-with-clearlydefinedio-spasht",level:2}],p={toc:d};function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h3",{id:"author"},"Author"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/Pendyala-thanvi"},"Thanvi Lahari Pendyala"))),(0,o.kt)("h3",{id:"contact-info"},"Contact info"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"mailto:"},"Email")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://linkedin.com/"},"LinkedIn"))),(0,o.kt)("h2",{id:"enhancement-with-clearlydefinedio-spasht"},"Enhancement with ClearlyDefined.io (spasht)"),(0,o.kt)("p",null,"The Spasht agent is used to fetch the metadata of licenses and copyrights of\nany uploaded package or project. The fetched data from the ClearlyDefined.io is\nstored in the spasht database and displayed using license and copyright tables."),(0,o.kt)("p",null,'To send or push the curated data back to ClearlyDefined.io, According to\nClearlyDefined, we have to send an HTTP request with or without the PR segment.\nIf any PR number is mentioned in the HTTP request, the information regarding\nthat PR is fetched. Otherwise, the data is fetched for the default branch\n"master". The curated data is updated as ClearlyDescribed and ClearlyLicensed.\nThe ClearlyDescribed contains the data of properties like source location,\nissues, Project website, and release dates, whereas the ClearlyLicensed\nincludes the data of properties like license, attribution, and number of files.'),(0,o.kt)("p",null,"The full curation of a project is returned to Spasht, and the curated data of\nthe selected project revision is pushed back to ClearlyDefined.io via patches.\nPatches contain the licensed and described data of the project. The figure\nbelow shows us a set of curations that contains the patches."))}h.isMDXComponent=!0}}]);