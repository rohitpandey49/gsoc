"use strict";(self.webpackChunkgosc_2021=self.webpackChunkgosc_2021||[]).push([[8245],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?a.createElement(f,i(i({ref:t},u),{},{components:n})):a.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6845:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return p}});var a=n(3117),r=n(102),o=(n(7294),n(3905)),i=["components"],l={title:"Week 6",author:"Sarita Singh"},c=void 0,s={unversionedId:"2021/scancode/updates/2021-07-13",id:"2021/scancode/updates/2021-07-13",title:"Week 6",description:"\x3c!--",source:"@site/docs/2021/scancode/updates/2021-07-13.md",sourceDirName:"2021/scancode/updates",slug:"/2021/scancode/updates/2021-07-13",permalink:"/gsoc/docs/2021/scancode/updates/2021-07-13",draft:!1,editUrl:"https://github.com/fossology/gsoc/edit/main/docs/2021/scancode/updates/2021-07-13.md",tags:[],version:"current",frontMatter:{title:"Week 6",author:"Sarita Singh"},sidebar:"2021",previous:{title:"Week 5",permalink:"/gsoc/docs/2021/scancode/updates/2021-07-06"},next:{title:"Week 7",permalink:"/gsoc/docs/2021/scancode/updates/2021-07-20"}},u={},p=[{value:"Coding Week 6",id:"coding-week-6",level:2},{value:"Attendees",id:"attendees",level:3},{value:"Week 5 Progress",id:"week-5-progress",level:3},{value:"Discussions",id:"discussions",level:3},{value:"Conclusion and Further Plans",id:"conclusion-and-further-plans",level:3}],d={toc:p};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"coding-week-6"},"Coding Week 6"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"Date:2021-07-13")),(0,o.kt)("h3",{id:"attendees"},"Attendees"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/mcjaeger"},"Michael C. Jaeger")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/GMishx"},"Gaurav Mishra")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/avinal"},"Avinal Kumar")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://github.com/itssingh"},"Sarita Singh"))),(0,o.kt)("h3",{id:"week-5-progress"},"Week 5 Progress"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Added ScanCodeFindings table in Copyright Browser on UI."),(0,o.kt)("li",{parentName:"ul"},"Working on populating this table with scancode_copyright data."),(0,o.kt)("li",{parentName:"ul"},"Created tables for ",(0,o.kt)("inlineCode",{parentName:"li"},"scancode_copyright_event")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"scancode_author_event"),"."),(0,o.kt)("li",{parentName:"ul"},"Added copyright and license text in source code."),(0,o.kt)("li",{parentName:"ul"},"Added comments for source code."),(0,o.kt)("li",{parentName:"ul"},"Merged ",(0,o.kt)("inlineCode",{parentName:"li"},"LicenseMatch")," to ",(0,o.kt)("inlineCode",{parentName:"li"},"Match")," class"),(0,o.kt)("li",{parentName:"ul"},"Instead of using ",(0,o.kt)("inlineCode",{parentName:"li"},"vector")," of ",(0,o.kt)("inlineCode",{parentName:"li"},"LicenseMatch")," class, using ",(0,o.kt)("inlineCode",{parentName:"li"},"map")," of type Match class in ",(0,o.kt)("inlineCode",{parentName:"li"},"scancode_wrapper")," to save parsed value of result scanned by ScanCode.")),(0,o.kt)("h3",{id:"discussions"},"Discussions"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Instead of using RuleBits as done by decider, using flags as scancode CLI options conventions would be nice."),(0,o.kt)("li",{parentName:"ul"},"These could be various flags:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"-l -> license"),(0,o.kt)("li",{parentName:"ul"},"-c -> copyright and holder"),(0,o.kt)("li",{parentName:"ul"},"-e -> email in the file, and"),(0,o.kt)("li",{parentName:"ul"},"-u -> URL in the file"))),(0,o.kt)("li",{parentName:"ul"},"These flags would be used in ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/itssingh/fossology/blob/feat/newagent/scancode-toolkit/src/scancode/agent/scancode_wrapper.cc#L76"},"ScanCode command"),"."),(0,o.kt)("li",{parentName:"ul"},"Gaurav suggested to look for ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/fossology/fossology/blob/master/src/maintagent/ui/maintagent.php#L86"},"Maintagent UI"),". It uses flags ( more verbose )."),(0,o.kt)("li",{parentName:"ul"},"It would be nice to implement ScanCode for CLI, can do this after once done with copyright/author UI.")),(0,o.kt)("h3",{id:"conclusion-and-further-plans"},"Conclusion and Further Plans"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add flags for ScanCode command to keep it verbose and match with scancode CLI flags."),(0,o.kt)("li",{parentName:"ul"},"Try to complete copyright UI by next meet."),(0,o.kt)("li",{parentName:"ul"},"Next task would be to implement ScanCode for CLI options once done with copyright/author UI.")))}m.isMDXComponent=!0}}]);